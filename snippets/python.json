{
  "setitem": {
    "prefix": "__setitem__",
    "body": [
      "__setitem__(self, key, value):",
      "\tself.$1[key] = value"
    ],
    "description": "Dict setitem"
  },
  "getitem": {
    "prefix": "__getitem__",
    "body": [
      "__getitem__(self, key):",
      "\treturn self.$1[key]"
    ],
    "description": "Dict getitem"
  },
  "iter": {
    "prefix": "__iter__",
    "body": [
      "__iter__(self):",
      "\treturn iter(self.$1)"
    ],
    "description": "Dict iterator"
  },
  "dict_contains": {
    "prefix": "__contains__",
    "body": [
      "__contains__(self, key):",
      "\treturn key in self.$1"
    ],
    "description": "Dict contains."
  },
  "property template": {
    "prefix": "_property",
    "body": [
        "@property",
        "def ${1:pname}(self):",
        "\t\"\"\"${2:The $1 property.}\"\"\"",
        "\t${3:return self._$1}",
        "",
        "@${4:$1}.setter",
        "def ${5:$1}(self, value):",
        "\t${6:self._$1} = value"
    ],
    "description": "New property: get and set via decorator"
  }
}

